source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
my_name = "Vincent"
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
install.packages("stringr")
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
library(stringr)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
# Your script for Part 4 goes here (and delete this comment!)
spring_break <- as.Date("16March2019","%D%M%Y")
# Your script for Part 4 goes here (and delete this comment!)
spring_break <- as.Date("16March2019","%D%M%Y")
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
# Your script for Part 4 goes here (and delete this comment!)
spring_break <- as.Date("16March2019","%D%M%Y")
print(spring_break)
Sys.Date()
# Your script for Part 4 goes here (and delete this comment!)
spring_break <- as.Date("16March2019","%d%b%Y")
print(spring_break)
days_to_break <-difftime(Sys.Date(),spring_break, units = "days")
print(days_to_break)
days_to_break <-difftime(spring_break,Sys.Date(), units = "days")
print(days_to_break)
birthdays <- list(me = as.Date("11November1998","%d%b%Y"), sister = as.Date("26September2006","%d%b%Y"), dad = as.Date("5Feburary1968","%d%b%Y"), mom = as.Date("17November1970","%d%b%Y"))
# Your script for Part 4 goes here (and delete this comment!)
spring_break <- as.Date("16March2019","%d%b%Y")
print(spring_break)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
install.packages("styler")
install.packages("lintr")
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
paste("Employee", 1:100)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salary_adjustments <- runif(100, -5000, 10000)
source('C:/Users/tedxu/Desktop/learning-git/book-exercises/chapter-10-exercises/exercise-2/exercise.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/book-exercises/chapter-10-exercises/exercise-2/exercise.R', echo=TRUE)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salary_2018
View(saleries)
source('C:/Users/tedxu/Desktop/learning-git/book-exercises/chapter-10-exercises/exercise-2/exercise.R', echo=TRUE)
source('C:/Users/tedxu/Desktop/learning-git/book-exercises/chapter-10-exercises/exercise-2/exercise.R', echo=TRUE)
# What was the 2018 salary of Employee 57
salaries[57, "salary_2018"]
salaries[57, ]
# How many employees got a raise?
nrow(salaries[salaries$got_raise , ])
# What was the dollar value of the highest raise?
max(salaries$salary_adjustments)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salary_adjustments == max(salaries$salary_adjustments), "employees"]
data()
data("EuStockMarket")
View(EuStockMarkets)
my_data <- read.csv("gates_money.csv", stringsAsFactors = FALSE)
getwd
getwd()
setwd("C:/Users/tedxu/Desktop/learning-git/book-exercises/chapter-10-exercises/exercise-4")
#
parent_bday <- format(birthdays$me)
#
parent_bday <- format(birthdays$me, %d%m)
#
parent_bday <- format(birthdays$dad, "%d%m")
print(parent_bday)
birthdays <- list(
me = as.Date("11November1998","%d%b%Y")
sister = as.Date("26September2006","%d%b%Y")
dad = as.Date("5Feburary1968","%d%b%Y")
mom = as.Date("17November1970","%d%b%Y")
)
#create variable birthdays containing list of birth dates
birthdays <- list(
me = as.Date("11November1998","%d%b%Y")
sister = as.Date("26September2006","%d%b%Y")
dad = as.Date("5Feburary1968","%d%b%Y")
mom = as.Date("17November1970","%d%b%Y")
)
#create variable birthdays containing list of birth dates
birthdays <- list(
me = as.Date("11November1998","%d%b%Y"),
sister = as.Date("26September2006","%d%b%Y"),
dad = as.Date("5Feburary1968","%d%b%Y"),
mom = as.Date("17November1970","%d%b%Y")
)
print(parent_bday)
#create variable birthdays containing list of birth dates
birthdays <- list(
me = as.Date("11nov1998","%d%b%Y"),
sister = as.Date("26sep2006","%d%b%Y"),
dad = as.Date("5feb1968","%d%b%Y"),
mom = as.Date("17nov1970","%d%b%Y")
)
#
days_to_birthday <-difftime(birthdays,Sys.Date(), units = "days")
#5
parent_bday <- format(birthdays$dad, "%d%m")
print(parent_bday)
#5
parent_bday <- format(birthdays$dad, "%d/%m")
print(parent_bday)
#6lapply
birthdays_2019 <- lapply(birthdays, paste, "/2019")
print(birthdays_2019)
#6lapply
birthdays_2019 <- lapply(parent_bday, paste, "/2019")
print(birthdays_2019)
#6lapply
birthdays_2019 <- lapply(parent_bday, paste0, "/2019")
print(birthdays_2019)
#6 lapply
birthdays_2019 <- lapply(birthdays, format, "%d%b/2019")
print(birthdays_2019)
#6 lapply
birthdays_2019 <- lapply(birthdays, format, "%d%b2019")
print(birthdays_2019)
#7 mapply
days_to_birthday <- difftime(birthdays,Sys.Date(), units = "days")
#7 mapply
days_to_birthday <- difftime(as.Date(birthdays),as.Date(Sys.Date()), units = "days")
#7 mapply
days_to_birthday <- difftime(birthdays,as.Date(Sys.Date()), units = "days")
date_has_passed <- function(Date){
boolean <- difftime(Date, Sys.Date(),units = "days") < 0
}
date_has_passed(2019/01/23)
date_has_passed(2019/01/23)
date_has_passed <- function(Date){
boolean <- difftime(Date, Sys.Date()) < 0
}
date_has_passed(as.Date("2019/01/23"))
- function(Date){
boolean <- difftime(Date, Sys.Date()) < 0
}
date_has_passed(as.Date("2019/01/23"))
#7 mapply
date_has_passed <- function(Date){
boolean <- difftime(Date, Sys.Date()) < 0
}
date_has_passed(as.Date("2019/01/23"))
#8 make-birthday_announcement
date_has_passed <- function(Date){
boolean <- difftime(Date, Sys.Date()) < 0
}
print(date_has_passed(as.Date("2019/01/23")))
}
}
{
boolean <- difftime(format(Date, "2019-%m-%d"), Sys.Date()) < 0
}
date_has_passed <- function(Date){
boolean <- difftime(format(Date, "2019-%m-%d"), Sys.Date()) < 0
}
print(date_has_passed(as.Date("2017/01/23")))
print(date_has_passed(as.Date("2017/01/21")))
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date(), units = "days")
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date(),units = "days")
}
print(paste0(NAME,"'s birthday is in", days_till_bday, " days." ))
}
make_birthday_announcement(Vincent, as.Date(11/11/2019))
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date(), units = "days")
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date(),units = "days")
}
print(paste0(NAME,"'s birthday is in", days_till_bday, " days." ))
}
make_birthday_announcement(Vincent, as.Date(11/11/2019))
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date(), units = "days")
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date(),units = "days")
}
print(paste0(NAME,"'s birthday is in", days_till_bday, " days." ))
}
make_birthday_announcement(Vincent, as.Date("2019/11/11"))
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date(), units = "days")
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date(),units = "days")
}
print(paste0(NAME,"'s birthday is in", days_till_bday, " days." ))
}
make_birthday_announcement("Vincent", as.Date("2019/11/11"))
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date(), units = "days")
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date(),units = "days")
}
print(paste0(NAME,"'s birthday is in ", days_till_bday, " days." ))
}
make_birthday_announcement("Vincent", as.Date("1998/11/11"))
bday_announcement <- mapply(make_birthday_announcement, birthdays_2019)
print(bday_announcement)
bday_announcement <- mapply(make_birthday_announcement,names(birthdays_2019), birthdays_2019)
print(bday_announcement)
bday_announcement <- mapply(make_birthday_announcement,names(birthdays_2019), birthdays_2019)
print(bday_announcement)
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date(), units = "days")
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date(),units = "days")
}
print(paste0(NAME,"'s birthday is in ", days_till_bday, " days." ))
}
make_birthday_announcement("Vincent", as.Date("1998/11/11"))
bday_announcement <- mapply(make_birthday_announcement,names(birthdays_2019), birthdays_2019)
print(bday_announcement)
#8 make-birthday_announcement
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date(), units = "days")
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date(),units = "days")
}
print(paste0(NAME,"'s birthday is in ", days_till_bday, " days." ))
}
make_birthday_announcement("Vincent", as.Date("1998/11/11"))
#9
bday_announcement <- mapply(make_birthday_announcement,names(birthdays_2019), birthdays_2019)
print(bday_announcement)
#8 make-birthday_announcement
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date(), units = "days")
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date(),units = "days")
}
print(paste0(NAME,"'s birthday is in ", days_till_bday, " days." ))
}
make_birthday_announcement("Vincent", as.Date("1998/11/11"))
e-birthday_announcement
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date(), units = "days")
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date(),units = "days")
}
print(paste0(NAME,"'s birthday is in ", days_till_bday, " days." ))
}
make_birthday_announcement("Vincent", as.Date("2019/11/11"))
day_announcement
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date())
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date())
}
print(paste0(NAME,"'s birthday is in ", days_till_bday, " days." ))
}
make_birthday_announcement("Vincent", as.Date("2019/11/11"))
View(birthdays_2019)
ly
birthdays_2019 <- lapply(birthdays, format, "%d%b2019")
birthdays_2019 <- lapply(birthdays_2019, as.Date)
print(birthdays_2019)
View(birthdays_2019)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
date_has_passed <- function(Date){
boolean <- difftime(format(Date, "2019-%m-%d"), Sys.Date()) < 0
}
birthdays_2019 <- lapply(birthdays, format, "%d%b2019")
birthdays_2019 <- lapply(birthdays_2019, as.Date,"%d%b%Y")
print(birthdays_2019)
#7 mapply
birthdays <- list(
me = as.Date("11nov1998","%d%b%Y"),
sister = as.Date("26sep2006","%d%b%Y"),
dad = as.Date("5feb1968","%d%b%Y"),
mom = as.Date("17nov1970","%d%b%Y")
)
View(birthdays)
birthdays_2019 <- lapply(birthdays, format, "2019-%m-%d")
birthdays_2019 <- lapply(birthdays_2019, as.Date,"%Y-%m-%d")
print(birthdays_2019)
#8 make-birthday_announcement
make_birthday_announcement <- function(NAME, Date){
if(date_has_passed(Date) == TRUE){
days_till_bday <- difftime(format(Date, "2020-%m-%d"), Sys.Date())
}
else{
days_till_bday <- difftime(format(Date, "2019-%m-%d"), Sys.Date())
}
print(paste0(NAME,"'s birthday is in ", days_till_bday, " days." ))
}
make_birthday_announcement("Vincent", as.Date("2019/11/11"))
#9
bday_announcement <- mapply(make_birthday_announcement,names(birthdays_2019), birthdays_2019)
print(bday_announcement)
books <- c(
"The Great Gatsby",
"Looking for Alaska",
"Crazy Rich Asian",
"Who Moved My Cheese",
"Fault in Our Stars",
"Paper Twons")
print(books)
squares <- numbers[round(sqrt(numbers))==sqaurt(numbers)]
print(squares)
#1.
numbers <- 1:201
#2.
squared_numbers <- numbers * numbers
#3.
squared_mean <- mean(squared_numbers)
print(squared_mean)
#4.
squared_median <- squared_numbers[length(squared_numbers)+1/2]
print(squared_median)
#5.
squares <- numbers[round(sqrt(numbers))==sqaurt(numbers)]
print(squares)
#5.
squares <- numbers[round(sqrt(numbers))==sqrt(numbers)]
print(squares)
spring_break <- as.Date("16March2019","%d%b%Y")
print(spring_break)
#2.
today <- Sys.Date()
#3.
days_to_break <-difftime(spring_break,today, units = "days")
print(days_to_break)
parent_bday <- format(birthdays$dad, "%d/%m")
print(parent_bday)
birthdays_2019 <- lapply(birthdays, format, "2019-%m-%d")
birthdays_2019 <- lapply(birthdays_2019, as.Date,"%Y-%m-%d")
print(birthdays_2019)
bday_announcement <- mapply(make_birthday_announcement,names(birthdays_2019), birthdays_2019)
print(bday_announcement)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
remove_books <- function(title, index){
books <- title[-index]
}
print(remove_books)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
remove_books <- function(title, index){
books <- title[-index]
print(books)
}
remove_books <- function(title, index){
books <- title[-index]
print(books)
}
#5.
books_without_fourm <- remove_books(books, 4)
source('C:/Users/tedxu/Desktop/learning-git/R/a2-core-skills-vxcent/assignment.R', echo=TRUE)
v1 <- c(3,1,4,1,5)
v2 <- c(10, 100)
v3 <- v1 + v2
v1 <- c(3,1,4,1,5)
v2 <- c(10, 100)
v3 <- v1 + v2
print(v3)
say_hello <- function(name){
print(paste("Hello", name)
}
say_hello(Vincent)
}
say_hello <- function(name){
print(paste("Hello", name)
}
}
say_hello <- function(name){
message <- paste("Hello", name))
print(message)
}
say_hello <- function(name){
message <- paste("Hello", name)
print(message)
}
say_hello(Vincent)
say_hello("Vincent")
